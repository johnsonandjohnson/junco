% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_proportion_diff.R
\name{prop_diff}
\alias{prop_diff}
\alias{a_proportion_diff_j}
\alias{s_proportion_diff_j}
\title{Proportion difference estimation}
\usage{
a_proportion_diff_j(
  df,
  .var,
  ref_path,
  .spl_context,
  ...,
  .stats = NULL,
  .formats = NULL,
  .labels = NULL,
  .indent_mods = NULL
)

s_proportion_diff_j(
  df,
  .var,
  .ref_group,
  .in_ref_col,
  variables = list(strata = NULL),
  conf_level = 0.95,
  method = c("waldcc", "wald", "cmh", "ha", "newcombe", "newcombecc", "strat_newcombe",
    "strat_newcombecc"),
  weights_method = "cmh"
)
}
\arguments{
\item{df}{(`data.frame`)\cr input data frame.}

\item{.var}{(`string`)\cr name of the response variable.}

\item{ref_path}{(`character`)\cr path to the reference group.}

\item{.spl_context}{(`environment`)\cr split context environment.}

\item{...}{Additional arguments passed to the statistics function.}

\item{.stats}{(`character`)\cr statistics to calculate.}

\item{.formats}{(`list`)\cr formats for the statistics.}

\item{.labels}{(`list`)\cr labels for the statistics.}

\item{.indent_mods}{(`list`)\cr indentation modifications for the statistics.}

\item{.ref_group}{(`data.frame`)\cr reference group data frame.}

\item{.in_ref_col}{(`logical`)\cr whether the current column is the reference column.}

\item{variables}{(`list`)\cr list with strata variable names.}

\item{conf_level}{(`numeric`)\cr confidence level for the confidence interval.}

\item{method}{(`string`)\cr method to use for confidence interval calculation.}

\item{weights_method}{(`string`)\cr method to use for weights calculation in stratified analysis.}
}
\value{
* `a_proportion_diff_j()` returns the corresponding list with formatted [rtables::CellValue()].

* `s_proportion_diff_j()` returns a named list of elements `diff`,
   `diff_ci`, `diff_est_ci` and `diff_ci_3d`.
}
\description{
The analysis function [a_proportion_diff_j()] can be used to create a layout element to estimate
the difference in proportion of responders within a studied population. The primary analysis variable,
`vars`, is a logical variable indicating whether a response has occurred for each record. See the `method`
parameter for options of methods to use when constructing the confidence interval of the proportion difference.
A stratification variable can be supplied via the `strata` element of the `variables` argument.
}
\section{Functions}{
\itemize{
\item \code{a_proportion_diff_j()}: Formatted analysis function which is used as `afun` in `estimate_proportion_diff()`.

\item \code{s_proportion_diff_j()}: Statistics function estimating the difference
in terms of responder proportion.

}}
\note{
The [a_proportion_diff_j()] function has the `_j` suffix to distinguish it
  from [tern::a_proportion_diff()]. The functions here are a copy from the `tern` package
  with additional features:

  * Additional statistic `diff_est_ci` is returned.
  * `ref_path` needs to be provided as extra argument to specify the control group column.

When performing an unstratified analysis, methods `'cmh'`, `'strat_newcombe'`,
  and `'strat_newcombecc'` are not permitted.
}
\examples{
## 'Mid' case: 4/4 respond in group A, 1/2 respond in group B.
nex <- 100 # Number of example rows
dta <- data.frame(
  'rsp' = sample(c(TRUE, FALSE), nex, TRUE),
  'grp' = sample(c('A', 'B'), nex, TRUE),
  'f1' = sample(c('a1', 'a2'), nex, TRUE),
  'f2' = sample(c('x', 'y', 'z'), nex, TRUE),
  stringsAsFactors = TRUE
)

l <- basic_table() |>
  split_cols_by(var = 'grp') |>
  analyze(
    vars = 'rsp',
    afun = a_proportion_diff_j,
    show_labels = "hidden",
    na_str = tern::default_na_str(),
    extra_args = list(
      conf_level = 0.9,
      method = 'ha',
      ref_path = c('grp', 'B')
    )
  )

build_table(l, df = dta)

s_proportion_diff_j(
  df = subset(dta, grp == 'A'),
  .var = 'rsp',
  .ref_group = subset(dta, grp == 'B'),
  .in_ref_col = FALSE,
  conf_level = 0.90,
  method = 'ha'
)

# CMH example with strata
s_proportion_diff_j(
  df = subset(dta, grp == 'A'),
  .var = 'rsp',
  .ref_group = subset(dta, grp == 'B'),
  .in_ref_col = FALSE,
  variables = list(strata = c('f1', 'f2')),
  conf_level = 0.90,
  method = 'cmh'
)

}
