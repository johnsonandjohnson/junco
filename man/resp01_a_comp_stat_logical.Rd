% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resp01_functions.R
\name{resp01_a_comp_stat_logical}
\alias{resp01_a_comp_stat_logical}
\title{Formatted Analysis Function for Comparative Statistic in Response Tables (RESP01)}
\usage{
resp01_a_comp_stat_logical(
  df,
  .var,
  conf_level,
  include,
  arm,
  strata,
  formats,
  methods,
  stat = c("comp_stat_ci", "pval")
)
}
\arguments{
\item{df}{(`data.frame`)\cr data set containing all analysis variables.}

\item{.var}{(`string`)\cr single variable name that is passed by `rtables` when requested
by a statistics function.}

\item{conf_level}{(`proportion`)\cr confidence level of the interval.}

\item{include}{(`flag`)\cr whether to include the results for this variable.}

\item{arm}{(`string`)\cr column name in the data frame that identifies the treatment arms.}

\item{strata}{(`character` or `NULL`)\cr variable names indicating stratification factors.}

\item{formats}{(`list`)\cr containing formats for `comp_stat_ci` and `pval`.}

\item{methods}{(`list`)\cr containing methods for comparative statistics. The element `comp_stat_ci` can be
'rr' (relative risk), 'or_cmh' (odds ratio with CMH estimation and p-value) or 'or_logistic' (odds ratio
estimated by conditional or standard logistic regression). The element `pval` can be 'fisher' (Fisher's
exact test) or 'chisq' (chi-square test), only used when using unstratified analyses with 'or_logistic'.}

\item{stat}{(`string`)\cr the statistic to return, either `comp_stat_ci`
or `pval`.}
}
\value{
The formatted result as [rtables::rcell()].
}
\description{
This function applies to a `logical` column called `.var` from `df`.
The response proportion is compared between the treatment arms identified
by column `arm`.
}
\examples{
dm <- droplevels(subset(formatters::DM, SEX \%in\% c("F", "M")))
dm$RESP <- as.logical(sample(c(TRUE, FALSE), size = nrow(DM), replace = TRUE))

resp01_a_comp_stat_logical(
  dm,
  .var = "RESP",
  conf_level = 0.9,
  include = TRUE,
  arm = "SEX",
  strata = "RACE",
  stat = "comp_stat_ci",
  method = list(comp_stat_ci = "or_cmh"),
  formats = list(
    comp_stat_ci = jjcsformat_xx("xx.xx (xx.xx - xx.xx)"),
    pval = jjcsformat_pval_fct(0.05)
  )
)
}
\seealso{
[resp01_a_comp_stat_factor()] for the `factor` equivalent.
}
