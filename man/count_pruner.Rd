% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pruning_functions.R
\name{count_pruner}
\alias{count_pruner}
\title{Count Pruner}
\usage{
count_pruner(
  count = 0,
  cat_include = NULL,
  cat_exclude = NULL,
  cols = c("TRT01A")
)
}
\arguments{
\item{count}{(\code{numeric})\cr count threshold. Function will keep all records strictly greater
than this threshold.}

\item{cat_include}{(\code{character})\cr Category to be considered for pruning}

\item{cat_exclude}{(\code{character})\cr Category to be excluded from pruning}

\item{cols}{(\code{character})\cr column path (character or integer (column indices))}
}
\value{
Function that can be utilized as pruning function in prune_table.
}
\description{
This is a pruning constructor function which identifies records to be pruned
based on the count (assumed to be the first statistic displayed when a compound
statistic (e.g., ## / ## (XX.X percent) is presented).
}
\examples{

ADSL <- data.frame(
  USUBJID = c(
    "XXXXX01", "XXXXX02", "XXXXX03", "XXXXX04", "XXXXX05",
    "XXXXX06", "XXXXX07", "XXXXX08", "XXXXX09", "XXXXX10"
  ),
  TRT01P = factor(
    c(
      "ARMA", "ARMB", "ARMA", "ARMB", "ARMB",
      "Placebo", "Placebo", "Placebo", "ARMA", "ARMB"
    )
  ),
  FASFL = c("Y", "Y", "Y", "Y", "N", "Y", "Y", "Y", "Y", "Y"),
  SAFFL = c("N", "N", "N", "N", "N", "N", "N", "N", "N", "N"),
  PKFL = c("N", "N", "N", "N", "N", "N", "N", "N", "N", "N")
)

lyt <- basic_table() |>
  split_cols_by("TRT01P") |>
  add_overall_col("Total") |>
  analyze("FASFL",
    var_labels = "Analysis set:",
    afun = a_freq_j,
    extra_args = list(label = "Full", val = "Y"),
    show_labels = "visible"
  ) |>
  analyze("SAFFL",
    var_labels = "Analysis set:",
    afun = a_freq_j,
    extra_args = list(label = "Safety", val = "Y"),
    show_labels = "visible"
  ) |>
  analyze("PKFL",
    var_labels = "Analysis set:",
    afun = a_freq_j,
    extra_args = list(label = "PK", val = "Y"),
    show_labels = "visible"
  )

result <- build_table(lyt, ADSL)

result

result <- prune_table(
  result,
  prune_func = count_pruner(cat_exclude = c("Safety"), cols = "Total")
)

result

}
